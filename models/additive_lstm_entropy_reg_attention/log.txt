

 Started at Thu Nov 14 02:02:18 2019
Parameter summary
{'lam': 0.01, 'modelname': 'additive_lstm_entropy_reg_attention', 'reg_method': 'none', 'kwm_path': './models/keyword_model_entropy_reg_attention', 'max_len': 30, 'learning_rate': 1.0, 'lstm_size': 20, 'embedding_dim': 20, 'modeltype': 'baseline_lstm', 'epochs': 20, 'debug': False, 'data_path': './data', 'batch_size': 10, 'test': False, 'keep_probs': 0.8}
Dataset building all done
Loading key-word model with the following parameters: 
{'lam': 0.01, 'modelname': 'keyword_model_entropy_reg_attention', 'reg_method': 'entropy', 'kwm_path': '', 'learning_rate': 0.01, 'lstm_size': 20, 'embedding_dim': 20, 'modeltype': 'reg_attention', 'epochs': 20, 'max_len': 30, 'test': False, 'data_path': './data', 'batch_size': 10, 'debug': False, 'keep_probs': 0.8}
using entropy regularization for attention weights
Buidling the model. Model name: additive_lstm_entropy_reg_attention
Training..
(0, 'loss: ', 0.28316375033785074, 'acc: ', 0.5115555611534252)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6421)
('Signal capturing score= ', 1.3963181017565307)
(1, 'loss: ', 0.28526647919685477, 'acc: ', 0.5120777834537956)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6416)
('Signal capturing score= ', 1.9619476795044155)
(2, 'loss: ', 0.2806084310439312, 'acc: ', 0.5135444500636723)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.4879)
('Signal capturing score= ', 1.5717994507821393)
(3, 'loss: ', 0.27609310607715615, 'acc: ', 0.5290777834893928)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.4523)
('Signal capturing score= ', 1.7977853117947655)
(4, 'loss: ', 0.27310749809257684, 'acc: ', 0.5612888939024674)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.5675)
('Signal capturing score= ', 1.9345014288168862)
(5, 'loss: ', 0.2709215913137628, 'acc: ', 0.5552444498332011)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6159)
('Signal capturing score= ', 1.978368315311909)
(6, 'loss: ', 0.2660742574258604, 'acc: ', 0.5716000053162376)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.4674)
('Signal capturing score= ', 1.9869469871646477)
(7, 'loss: ', 0.26330800441900887, 'acc: ', 0.5888888939652178)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.4074)
('Signal capturing score= ', 1.9110134449372107)
(8, 'loss: ', 0.26101987351782413, 'acc: ', 0.5947444493596753)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6004)
('Signal capturing score= ', 2.0596923833403276)
(9, 'loss: ', 0.261314306315552, 'acc: ', 0.6046333378801744)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.4736)
('Signal capturing score= ', 2.073130524785775)
(10, 'loss: ', 0.25830171584032685, 'acc: ', 0.6162222268184027)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6099)
('Signal capturing score= ', 2.1148700112165213)
(11, 'loss: ', 0.25447699243262306, 'acc: ', 0.6200888933208254)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6389)
('Signal capturing score= ', 2.3366460622839655)
(12, 'loss: ', 0.2504874313567351, 'acc: ', 0.6296888931385345)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6484)
('Signal capturing score= ', 1.9908541906365376)
(13, 'loss: ', 0.24893030669353902, 'acc: ', 0.6326111151633991)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.4699)
('Signal capturing score= ', 2.1092224704615026)
(14, 'loss: ', 0.24526830211881961, 'acc: ', 0.6349222261458636)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.5308)
('Signal capturing score= ', 2.155625093748549)
(15, 'loss: ', 0.24428856459384163, 'acc: ', 0.6359000041517946)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.633)
('Signal capturing score= ', 2.28013619570319)
(16, 'loss: ', 0.24154391274120038, 'acc: ', 0.6449888926462994)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6458)
('Signal capturing score= ', 2.061336478654686)
(17, 'loss: ', 0.24273069030268946, 'acc: ', 0.6485222258468469)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.5901)
('Signal capturing score= ', 1.9321418255503653)
(18, 'loss: ', 0.23890453342167248, 'acc: ', 0.6505000032112003)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6467)
('Signal capturing score= ', 2.3163315774196196)
(19, 'loss: ', 0.23659368385214152, 'acc: ', 0.6534777810234162)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6451)
('Signal capturing score= ', 2.268396989890983)
Saving the model
Finished
Producing visualization


 Started at Thu Nov 14 02:21:54 2019
Parameter summary
{'lam': 0.01, 'modelname': 'additive_lstm_entropy_reg_attention', 'reg_method': 'none', 'kwm_path': './models/keyword_model_entropy_reg_attention', 'learning_rate': 1.0, 'lstm_size': 20, 'embedding_dim': 20, 'modeltype': 'baseline_lstm', 'epochs': 20, 'max_len': 30, 'test': False, 'data_path': './data', 'batch_size': 10, 'debug': False, 'keep_probs': 0.8}
Dataset building all done
Loading key-word model with the following parameters: 
{'lam': 0.01, 'modelname': 'keyword_model_entropy_reg_attention', 'reg_method': 'entropy', 'kwm_path': '', 'learning_rate': 0.01, 'lstm_size': 20, 'embedding_dim': 20, 'modeltype': 'reg_attention', 'epochs': 20, 'max_len': 30, 'test': False, 'data_path': './data', 'batch_size': 10, 'debug': False, 'keep_probs': 0.8}
using entropy regularization for attention weights
Buidling the model. Model name: additive_lstm_entropy_reg_attention
Restoring Model
Training..
(0, 'loss: ', 0.2366067039207038, 'acc: ', 0.6554555589275227)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6485)
('Signal capturing score= ', 2.082090200528066)
(1, 'loss: ', 0.2342394048480524, 'acc: ', 0.6557666699431008)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6613)
('Signal capturing score= ', 2.3008492687878483)
(2, 'loss: ', 0.23427699195557378, 'acc: ', 0.6636111141683326)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6288)
('Signal capturing score= ', 2.231685291109414)
(3, 'loss: ', 0.23564332506262387, 'acc: ', 0.6577888920373387)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.637)
('Signal capturing score= ', 2.056648237019168)
(4, 'loss: ', 0.23310181062290858, 'acc: ', 0.6625000029396679)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6395)
('Signal capturing score= ', 2.0681344543880655)
(5, 'loss: ', 0.23306976613128144, 'acc: ', 0.6671444473639131)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6714)
('Signal capturing score= ', 2.236887620632285)
(6, 'loss: ', 0.23399915020677467, 'acc: ', 0.664577780932188)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6518)
('Signal capturing score= ', 2.031955266725242)
(7, 'loss: ', 0.2314561322198974, 'acc: ', 0.6667333364296291)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6714)
('Signal capturing score= ', 2.0327096110202154)
(8, 'loss: ', 0.22515127550665703, 'acc: ', 0.6729000024828646)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.662)
('Signal capturing score= ', 1.962333028041108)
(9, 'loss: ', 0.22541448263673938, 'acc: ', 0.6700777808096674)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6639)
('Signal capturing score= ', 2.172583998561861)
(10, 'loss: ', 0.22931586958695618, 'acc: ', 0.6711444471577803)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6629)
('Signal capturing score= ', 2.2243984652965354)
(11, 'loss: ', 0.2297861307401262, 'acc: ', 0.6717000029997693)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6652)
('Signal capturing score= ', 2.2959510419084306)
(12, 'loss: ', 0.2249574745370903, 'acc: ', 0.6781111140731308)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6046)
('Signal capturing score= ', 2.0911778777239047)
(13, 'loss: ', 0.22430085719061188, 'acc: ', 0.6814666689253516)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6727)
('Signal capturing score= ', 2.210977227464166)
(14, 'loss: ', 0.22630586122467908, 'acc: ', 0.6748888913947675)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6603)
('Signal capturing score= ', 2.2062894001864484)
(15, 'loss: ', 0.2238863938661913, 'acc: ', 0.6847555578359299)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6581)
('Signal capturing score= ', 2.2199457038596706)
(16, 'loss: ', 0.2225483948526283, 'acc: ', 0.6806555582210422)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6765)
('Signal capturing score= ', 2.2856938738720878)
(17, 'loss: ', 0.2248309806521154, 'acc: ', 0.6799555579937167)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6688)
('Signal capturing score= ', 2.050072469782481)
(18, 'loss: ', 0.22485842440918916, 'acc: ', 0.6781000027093622)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6661)
('Signal capturing score= ', 2.047384427555373)
(19, 'loss: ', 0.22313103952248478, 'acc: ', 0.6778333358822597)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6734)
('Signal capturing score= ', 2.1030110023485102)
Saving the model
Finished
Producing visualization


 Started at Thu Nov 14 02:41:31 2019
Parameter summary
{'lam': 0.01, 'modelname': 'additive_lstm_entropy_reg_attention', 'reg_method': 'none', 'kwm_path': './models/keyword_model_entropy_reg_attention', 'learning_rate': 1.0, 'lstm_size': 20, 'embedding_dim': 20, 'modeltype': 'baseline_lstm', 'epochs': 20, 'max_len': 30, 'test': False, 'data_path': './data', 'batch_size': 10, 'debug': False, 'keep_probs': 0.8}
Dataset building all done
Loading key-word model with the following parameters: 
{'lam': 0.01, 'modelname': 'keyword_model_entropy_reg_attention', 'reg_method': 'entropy', 'kwm_path': '', 'learning_rate': 0.01, 'lstm_size': 20, 'embedding_dim': 20, 'modeltype': 'reg_attention', 'epochs': 20, 'max_len': 30, 'test': False, 'data_path': './data', 'batch_size': 10, 'debug': False, 'keep_probs': 0.8}
using entropy regularization for attention weights
Buidling the model. Model name: additive_lstm_entropy_reg_attention
Restoring Model
Training..
(0, 'loss: ', 0.22391875146417362, 'acc: ', 0.6854444465719991)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6694)
('Signal capturing score= ', 1.823352853323056)
(1, 'loss: ', 0.2253930605030101, 'acc: ', 0.6866222243292465)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6656)
('Signal capturing score= ', 2.3298358919225888)
(2, 'loss: ', 0.22468379022853657, 'acc: ', 0.6883000022619963)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6517)
('Signal capturing score= ', 2.2073898042060094)
(3, 'loss: ', 0.21977774256527322, 'acc: ', 0.6879555576451951)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.5973)
('Signal capturing score= ', 2.2944665259852157)
(4, 'loss: ', 0.21990231739106822, 'acc: ', 0.6883666687069667)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.664)
('Signal capturing score= ', 2.0221835554755145)
(5, 'loss: ', 0.22242824022922045, 'acc: ', 0.6927000020552012)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6257)
('Signal capturing score= ', 2.1481755983612625)
(6, 'loss: ', 0.22227307051816023, 'acc: ', 0.6888111131969425)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.5479)
('Signal capturing score= ', 2.0046072853225456)
(7, 'loss: ', 0.2204421563101415, 'acc: ', 0.687100002117455)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.5462)
('Signal capturing score= ', 2.0291691081023475)
(8, 'loss: ', 0.220922287283517, 'acc: ', 0.6942111128080223)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6832)
('Signal capturing score= ', 2.1876520524946192)
(9, 'loss: ', 0.22412847693445576, 'acc: ', 0.6920333353521095)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6773)
('Signal capturing score= ', 2.170038208834451)
(10, 'loss: ', 0.22096937616490242, 'acc: ', 0.6898666688981984)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6508)
('Signal capturing score= ', 2.1805909465216837)
(11, 'loss: ', 0.22481205231747461, 'acc: ', 0.687655557912257)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6764)
('Signal capturing score= ', 1.8169845669531832)
(12, 'loss: ', 0.22269454669616082, 'acc: ', 0.6868333352920082)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6687)
('Signal capturing score= ', 2.394689704420519)
(13, 'loss: ', 0.224837092987805, 'acc: ', 0.6833444466773007)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.652)
('Signal capturing score= ', 2.2792592115624672)
(14, 'loss: ', 0.22593560294512038, 'acc: ', 0.6826888911376396)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.5685)
('Signal capturing score= ', 2.4653273337970902)
(15, 'loss: ', 0.22517450613518142, 'acc: ', 0.6914555578579505)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.5886)
('Signal capturing score= ', 2.4152322183299053)
(16, 'loss: ', 0.2215701728014327, 'acc: ', 0.6898555577157273)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6498)
('Signal capturing score= ', 2.4256221677078185)
(17, 'loss: ', 0.22420292903759723, 'acc: ', 0.6922333353310823)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6249)
('Signal capturing score= ', 2.349776218320428)
(18, 'loss: ', 0.22306348706124765, 'acc: ', 0.686500002231035)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6609)
('Signal capturing score= ', 2.431093150512909)
(19, 'loss: ', 0.22270129033747232, 'acc: ', 0.6925222242424885)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
('Test accuracy = ', 0.6775)
('Signal capturing score= ', 2.212334846726602)
Saving the model
Finished
Producing visualization
